2023-12-19 07:31:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetsype VARCHAR(255), raing VARCHAR(255) ) [*]CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)"; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetsype VARCHAR(255), raing VARCHAR(255) ) CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42000-214]
2023-12-19 07:34:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) [*]CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)"; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42000-214]
2023-12-19 08:37:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) [*]CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)"; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42000-214]
2023-12-19 09:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) [*]CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)"; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinestype VARCHAR(255), raing VARCHAR(255) ) CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42000-214]
2023-12-19 09:29:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetype VARCHAR(255), raing VARCHAR(255) ) [*]CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)"; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetype VARCHAR(255), raing VARCHAR(255) ) CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42000-214]
2023-12-19 09:56:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Unknown data type: "STRING"; SQL statement:
CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname String, lastname String, expertise String, experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [50004-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readIfDataType1(Parser.java:6249)
	at org.h2.command.Parser.readIfDataType(Parser.java:6087)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6069)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5948)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:9331)
	at org.h2.command.Parser.parseCreateTable(Parser.java:9271)
	at org.h2.command.Parser.parseCreate(Parser.java:6784)
	at org.h2.command.Parser.parsePrepared(Parser.java:763)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.dinemaster.DineMasterApplication.main(DineMasterApplication.java:12)
2023-12-19 09:58:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "RESTAURANT" already exists; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetype VARCHAR(255), raing VARCHAR(255) ) [42101-214]
2023-12-19 10:00:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY [*]restaurantid REFERENCE CHEF(id)"; expected "("; SQL statement:
CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42001-214]
2023-12-19 10:03:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY [*]restaurantid REFERENCE CHEF(id)"; expected "("; SQL statement:
CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id) [42001-214]
2023-12-19 10:05:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY [*]restaurantid REFERENCE CHEF(id))"; expected "("; SQL statement:
CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)) [42001-214]
2023-12-19 10:12:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY [*]restaurantid REFERENCE CHEF(id))"; expected "("; SQL statement:
CREATE TABLE CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY restaurantid REFERENCE CHEF(id)) [42001-214]
2023-12-19 10:21:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "RESTAURANT" already exists; SQL statement:
CREATE TABLE RESTAURANT( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), cuisinetype VARCHAR(255), rating VARCHAR(255)) [42101-214]
2023-12-19 10:52:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY (restaurantid) [*]REFERENCE CHEF(id))"; expected "INDEX, REFERENCES"; SQL statement:
CREATE TABLE if not exists CHEF( id INT PRIMARY KEY AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), expertise VARCHAR(255), experienceyears INT, restaurantid INT, FOREIGN KEY (restaurantid) REFERENCE CHEF(id)) [42001-214]
2023-12-19 11:04:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into restaurant(name,address,cuisinetype,rating) [*]value('Fine Dining','123 Main St','European',5)"; expected "OVERRIDING USER VALUE, OVERRIDING SYSTEM VALUE, DIRECT, SORTED, DEFAULT VALUES, VALUES, SET, WITH, (, SELECT, TABLE, VALUES"; SQL statement:
insert into restaurant(name,address,cuisinetype,rating) value('Fine Dining','123 Main St','European',5) [42001-214]
2023-12-19 12:09:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CHEF" not found; SQL statement:
drop table chef [42102-214]
2023-12-19 12:09:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "RESTAURANT" not found; SQL statement:
drop table restaurant [42102-214]
2023-12-19 12:15:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "RESTAURANT" not found; SQL statement:
drop table restaurant [42102-214]
